FORMAT: 1A

# Контроль Кадров

API проекта Контроль Кадров.

Общее положение:
* Параметры `ids` и `idsExcept`
  1) Для методов API, в которых доступны параметры `ids` и `idsExcept`, не могут быть переданы исключающий и включающий параметры одновременно.
  2) Параметр `idsExcept` отвечает за выбор всех сущностей, кроме указанных.
     Пример: `employees: {idsExcept: ['uuid']}` приведет к выбору всех сотрудников клиента, кроме сущности с идентификатором `uuid`.
  3) При передаче в параметре `idsExcept` пустого массива будут выбраны все сущности.
     Пример: `employees: {idsExcept: []}` приведет к выбору всех сотрудников клиента.
* Время `unix timestamp`
  * Передается целым числом секунд с 1 января 1970 г. в UTC.
* Параметр `search`
  * Длина строки, указанной в качестве значения для параметра, во всех запросах не должна превышать 255 символов.
* Методы получения сущностей по списку их идентификаторов
  * Правильно по REST было бы использовать для этого запросы `GET /entities?ids[]=UUID1&ids[]=UUID2&...`.
  * У этого решения есть недостаток: большое количество UUID использовать нельзя из-за ограничений на максимальную длину запроса в веб-серверах и клиентах.
  * Решение: передавать UUID в теле запроса. Следовательно, глагол должен быть POST или PUT.
  * Для максимального соответствия принципам REST был придуман виртуальный ресурс "набор сущностей" (set). Все переданные в запросе UUID составляют один набор.
  * Набор сущностей "создается" на сервере запросом `POST /entities/sets`. В ответ на запрос возвращается представление "созданного" набора — массив всех найденных сущностей из набора. Если какие-то сущности найти не удалось, они не возвращаются; ошибки при этом не возникает.
  * На самом деле на сервере ничего не создается и в базе данных ничего не сохраняется.
* Присвоение адресов
  * Адреса присваиваются асинхронно!
  * Сразу после создания зоны, объекта, получения новых координат сотрудника их адрес может быть "Undefined". Через некоторое время им будет присвоен "нормальный" адрес. Это делается отдельным фоновым процессом.
  * В нормальном режиме работы сервера присвоение адреса занимает 100—200 мс. Если геокодер перегружен, это время может быть больше.
  * Если вы хотите показать адрес зоны или объекта пользователю, а он пока Undefined, обновите модель с сервера, чтобы получить актуальный адрес.
* Добавление сотрудника
  * Из корпоративного объединения: не требует подтверждения со стороны абонента. Сотрудник будут добавлен незамедлительно.
  * Не из корпоративного объединения: необходимо подтверждение со стороны абонента. Требуется создать приглашение.
  * Не из сети MegaFon: необходимо подтверждение. Требуется создать приглашение.
* Приглашение сотрудника
  * Чтобы послать приглашение сотруднику необходимо выполнить запрос "Создать приглашение".
  * После создания приглашения сотруднику будет отправленно сообщение с кодом подтверждения.
  * Ответив на это сообщение положительно абонент будет добавлен в список сотрудников клиента.
* Массивы значений в URL-строке передаются следующим образом: `field[]=value1&field[]=value2&...`
  Пример: `/employees?states[]=activated&states[]=removed`
* РТ - метод протестирован вручную
* Ответ с кодом `200` и телом `{'status': 'incorrectRequest'}` возвращается в случаях:
  * Если будет выполнен запрос по маршруту который отсутствует в документации, то есть комбинация таких `method` и `path` незадокументирована;
  * Если тело запроса не будет соотвествовать переданному в запросе заголовку `Content-Type`;
  * Если тело запроса имеет кодировку, отличную от UTF-8, и преобразовать тело в эту кодировку невозможно;
  * Если HTTP метод запроса не поддерживается или является не валидным;
  * Если тип параметра не соответствует документации.
* Аутентификация и Авторизация
  * Вся аутентификация производится через сторонний сервис, реализующий технологию **Single Sign-On**
  * Для авторизации пользователя нужно передавать заголовок **Cookie** с токеном доступа, полученным на стороне SSO

# Data Structures

## Color
+ color: `#593001` (string) - цвет значка в стандартной HEX RGB нотации в диапазоне от #000000 до #FFFFFF (по умолчанию — серый (`#808080`), символ решетки в начале — необязателен)
